'use strict';Object.defineProperty(exports,'__esModule',{value:!0}),exports.onAddTodoSaga=onAddTodoSaga,exports.onAdd=onAdd,exports.onDeleteTodoSaga=onDeleteTodoSaga,exports.onDelete=onDelete,exports.onUpdateTodoSaga=onUpdateTodoSaga,exports.onUpdate=onUpdate,exports.onCheckedTodoSaga=onCheckedTodoSaga,exports.onChecked=onChecked,exports.todos=todos;var _effects=require('redux-saga/effects'),_todo=require('../modules/todo'),_marked=/*#__PURE__*/regeneratorRuntime.mark(onAddTodoSaga),_marked2=/*#__PURE__*/regeneratorRuntime.mark(onAdd),_marked3=/*#__PURE__*/regeneratorRuntime.mark(onDeleteTodoSaga),_marked4=/*#__PURE__*/regeneratorRuntime.mark(onDelete),_marked5=/*#__PURE__*/regeneratorRuntime.mark(onUpdateTodoSaga),_marked6=/*#__PURE__*/regeneratorRuntime.mark(onUpdate),_marked7=/*#__PURE__*/regeneratorRuntime.mark(onCheckedTodoSaga),_marked8=/*#__PURE__*/regeneratorRuntime.mark(onChecked),_marked9=/*#__PURE__*/regeneratorRuntime.mark(todos);//추가기능 사가
function onAddTodoSaga(a){var b=a.payload;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.put)((0,_todo.addTodoSaga)(b));case 2:case'end':return a.stop();}},_marked,this)}function onAdd(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.takeLatest)('ADD_TODO_SAGA',onAddTodoSaga);case 2:case'end':return a.stop();}},_marked2,this)}// 삭제기능 사가
function onDeleteTodoSaga(a){var b=a.payload;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.put)((0,_todo.deleteTodoSaga)(b));case 2:case'end':return a.stop();}},_marked3,this)}function onDelete(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.takeLatest)('DELETE_TODO_SAGA',onDeleteTodoSaga);case 2:case'end':return a.stop();}},_marked4,this)}// 수정기능 사가
function onUpdateTodoSaga(a){var b=a.payload;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.put)((0,_todo.updateTodoSaga)(b));case 2:console.log('asdf');case 3:case'end':return a.stop();}},_marked5,this)}function onUpdate(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.takeLatest)('UPDATE_TODO_SAGA',onUpdateTodoSaga);case 2:case'end':return a.stop();}},_marked6,this)}//완료기능 사가
function onCheckedTodoSaga(a){var b=a.payload;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.put)((0,_todo.checkedTodoSaga)(b));case 2:case'end':return a.stop();}},_marked7,this)}function onChecked(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.takeLatest)('CHECKED_TODO_SAGA',onCheckedTodoSaga);case 2:case'end':return a.stop();}},_marked8,this)}//모든 각각의 기능의 사가들 모아서 export
function todos(){return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,(0,_effects.all)([(0,_effects.call)(onAdd),(0,_effects.call)(onDelete),(0,_effects.call)(onUpdate),(0,_effects.call)(onChecked)]);case 2:case'end':return a.stop();}},_marked9,this)}